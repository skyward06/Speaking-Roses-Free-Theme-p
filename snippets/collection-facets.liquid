<!-- start collection-facets.liquid (SNIPPET) -->
{% assign highestPrice = 0 %}
{% assign products_by_price = collection.products | sort: "price_max" | reverse %}

{% for product in products_by_price limit: 1 %}
  {% assign highestPrice = product.price_max %}
{% endfor %}

<div class="collection-facets__wrapper">
  <h2 class="collection-facets__title no-desktop">{{ 'collection.general.mobile_filter_label' | t }}</h2>

  <div class="collection-facets__scroll">
    {% assign currencies_using_comma_decimals = 'ANG,ARS,BRL,BYN,BYR,CLF,CLP,COP,CRC,CZK,DKK,EUR,HRK,HUF,IDR,ISK,MZN,NOK,PLN,RON,RUB,SEK,TRY,UYU,VES,VND'
      | split: ','
    %}
    {% assign uses_comma_decimals = false %}
    {% if currencies_using_comma_decimals contains cart.currency.iso_code %}
      {% assign uses_comma_decimals = true %}
    {% endif %}

    {%- for filter in collection.filters -%}
      {%- case filter.type -%}
        {%- when 'boolean', 'list' -%}
          {% unless filter.label == "Variation" %}
            <details open class="collection-facets__item collection-facets__item--list">
              <summary class="collection-facets__item-summary">
                <span class="collection-facets__item-title">
                  {{- filter.label | escape }}
                </span>
              </summary>
  
              <div class="collection-facets__item-values">
                <fieldset class="collection-facets__item-fieldset">
                  {%- for filter_value in filter.values -%}
                    <label class="collection-facets__item-value">
                      <input
                        type="checkbox"
                        class="collection-facets__item-option"
                        value="{{ filter_value.value }}"
                        name="{{ filter_value.param_name }}"
                      >
                      <span class="collection-facets__item-label">{{ filter_value.label | capitalize }}</span>
                    </label>
                  {%- endfor -%}
                </fieldset>
              </div>
            </details>
          {% endunless %}
        {%- when 'price_range' -%}
          <details open class="collection-facets__item collection-facets__item--price-range">
            <summary class="collection-facets__item-summary">
              <span class="collection-facets__item-title">
                {{- filter.label | escape }}
              </span>
            </summary>

            <div class="collection-facets__item-values">
              <fieldset class="collection-facets__item-fieldset">
                <div class="collection-facets__item-box-wrapper">
                  <div class="collection-facets__sliders-control">
                    <div class="range-slider-track"></div>
                    <input type="range" id="slider-1" step="1" min="0" max="{{ highestPrice }}" value={{ highestPrice | divided_by: 4 | floor }}>
                    <input type="range" id="slider-2" step="1" min="0" max="{{ highestPrice }}" value={{ highestPrice | divided_by: 1.3 | floor }}>
                  </div>

                  <label class="collection-facets__item-box">
                    Min
                    <input
                      type="number"
                      min="0"
                      name="{{ filter.min_value.param_name }}"
                      placeholder="0"
                      class="collection-facets__item-input price-range-min"
                      {%- if filter.min_value.value -%}
                        {%- if uses_comma_decimals -%}
                          value="{{ filter.min_value.value | money_without_currency | replace: '.', '' | replace: ',', '.' }}"
                        {%- else -%}
                          value="{{ filter.min_value.value | money_without_currency | replace: ',', '' }}"
                        {%- endif %}
                      {%- endif -%}
                    >
                  </label>
                  <label class="collection-facets__item-box">
                    Max
                    <input
                      type="number"
                      name="{{ filter.max_value.param_name }}"
                      class="collection-facets__item-input  price-range-max"
                      placeholder="999"
                      {%- if filter.max_value.value -%}
                        {%- if uses_comma_decimals -%}
                          value="{{ filter.max_value.value | money_without_currency | replace: '.', '' | replace: ',', '.' }}"
                        {%- else -%}
                          value="{{ filter.max_value.value | money_without_currency | replace: ',', '' }}"
                        {%- endif %}
                      {%- endif -%}
                    >
                  </label>
                </div>

                <button class="collection-facets__item-button">Apply</button>
              </fieldset>
            </div>
          </details>
        {%- when 'list' -%}
          {% if filter.label == "Variation" %}
            <details open class="collection-facets__item collection-facets__item--list">
              <summary class="collection-facets__item-summary">
                <span class="collection-facets__item-title">
                  {{- filter.label | escape }}
                </span>
              </summary>
  
              <div class="collection-facets__item-values">
                <fieldset class="collection-facets__item-fieldset collection-facets__item-fieldset--variation">
                  {% assign variantion_filter_values = filter.values | reverse %}
                  {%- for filter_value in variantion_filter_values -%}
                    <label class="collection-facets__item-value">
                      <input
                        style="display:none"
                        type="checkbox"
                        class="collection-facets__item-option"
                        value="{{ filter_value.value }}"
                        name="{{ filter_value.param_name }}"
                      >

                      <span class="collection-facets__item-label collection-facets__item--variation">{{ filter_value.label | capitalize }}</span>
                    </label>
                  {%- endfor -%}
                </fieldset>
              </div>
            </details>
          {% endif %}
      {%- endcase -%}
    {%- endfor -%}
  </div>
</div>

<style scope>
  .collection-facets__item-summary {
    appearance: auto;
    -webkit-appearance: auto;
    padding: 22px 0 21px;
  }

  .collection-facets__item-summary::-webkit-details-marker {
    display: none;
  }

  .collection-facets__item {
    border-top: 1px solid #DEE2E6;
  }

  .collection-facets__item-title {
    font-weight: bold;
    font-size: 20px;
    cursor: pointer;
    position: relative;
    width: 100%;
    display: block;
  }
  span.collection-facets__item-title::after {
    content: '';
    position: absolute;
    right: 49px;
    width: 14px;
    height: 2px;
    background-color: #D9D9D9;
    top: 12px;
    transition: ease all .6s;
  }
  span.collection-facets__item-title::before {
    content: '';
    position: absolute;
    right: 54.5px;
    height: 14px;
    width: 2px;
    background-color: #D9D9D9;
    top: 6px;
    transition: ease all .6s;
  }

  .collection-facets__item-values {
    margin: 0 auto 10px;
  }

  details[open] span.collection-facets__item-title::after {
    transform: none;
  }

  details[open] span.collection-facets__item-title::before {
    transform: rotate(-90deg);
    transition: ease all .6s;
  }

  details[open] summary ~ * {
    animation: sweep .5s ease-in-out;
  }
  
  @keyframes sweep {
    0%    {opacity: 0; transform: translateY(-10px)}
    100%  {opacity: 1; transform: translateX(0)}
  }

  .collection-facets__item-fieldset {
    border: none;
    position: relative;
  }
  .collection-facets__item-fieldset--variation {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    gap: 4px;
    margin-top: -1px;
  }
  .collection-facets__item-label {
    font-size: 15px;
    word-break: break-word;
  }
  .collection-facets__item--variation {
    padding: 6px;
    border: 1px solid #4b4b4b99;
    border-radius: 5.74px;
    letter-spacing: 0.1px;
  }
  .collection-facets__item-option:checked + .collection-facets__item--variation {
    background-color: #565656;
    color: #ffffff99;
  }
  .collection-facets__item-value {
    display: flex;
    align-items: center;
    line-height: 1.2;
    cursor: pointer;
    margin-bottom: 1px;
  }
  .collection-facets__item-value input[type='checkbox'] {
    min-width: 15px;
    min-height: 15px;
    margin: 0;
    margin-right: 6px;
  }

  .collection-facets__item-value:not(:last-child) {
    margin-bottom: 11px;
    margin-top: 1px;
  }

  .collection-facets__item-fieldset--variation .collection-facets__item-value {
    margin-bottom: 0;
  }

  .collection-facets__item-box-wrapper {
    display: flex;
    justify-content: flex-start;
    flex-wrap: wrap;
  }

  .collection-facets__sliders-control {
    width: 82.3%;
    position: relative;
    margin: 9px 0 24px;
  }

  input[type="range"]{
    position: absolute;
    pointer-events: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    outline: none;
    z-index: 2;
    height: 5px;
    width: 100%;
    background-color: transparent;
  }

  .range-slider-track{
    width: 100%;
    height: 2px;
    position: absolute;
    background: linear-gradient(to right, #E3E3E3 25%, #A3A3A3 25%, #A3A3A3 75%, #E3E3E3 75%);
  }

  input[type="range"]::-webkit-slider-runnable-track {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    height: 5px;
  }

  input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    height: 18px;
    width: 18px;
    background-color: #FFFFFF;
    cursor: pointer;
    pointer-events: auto;
    transform: translateY(-7px);
    border-radius: 50%;
    box-shadow: 0px 0px 2px #000;
  }

  input[type="range"]:active::-webkit-slider-thumb{
    border: 2px solid #E3E3E3;
  }

  .collection-facets__item-box {
    font-size: 14px;
    display: inline-block;
    width: 41%;
    position: relative;
  }
  .collection-facets__item-input {
    width: 91%;
    height: 30px;
    border: 1px solid #595959;
    padding: 6px 5px 5px 9.6px;
    cursor: pointer;
    font-size: 0.8rem;
    border-radius: 6px;
    margin-top: 7px;
  }
  .collection-facets__item-input::placeholder {
    color: #595959;
    font-size: 14px;
  }
  .collection-facets__item-button {
    background: transparent;
    border: 1px solid #595959;
    width: 78%;
    height: 31px;
    border-radius: 4px;
    padding: 0 10px;
    margin-top: 10px;
    font-size: 14px;
  }
  .collection-facets__overlay { 
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    visibility: hidden;
    background: transparent;
    z-index: 10;
  }

  .collection-facets__item .collection-facets__item--price-range {
    margin-top: 10px;
  }

  @media (max-width: 1019px) {
    .collection-facets__wrapper {
      position: relative;
      height: 100%;
    }
    .collection-facets__scroll {
      padding: 10px 20px 60px;
      overflow-y: auto;
      height: 100%;
    }
    .collection-facets__title {
      padding: 10px 20px 10px;
    }
    .collection-facets__item-title {
      font-size: 18px;
    }
    .collection-facets__item-value input[type='checkbox'] {
      min-width: 16px;
      min-height: 16px;
      margin-right: 10px;
    }

    .collection-facets__item-label {
      font-size: 16px;
    }
  }

  @media (max-width: 767px) {
    .collection-facets__item-title {
      font-size: 16px;
    }

    .collection-facets__item-value input[type='checkbox'] {
      min-width: 14px;
      min-height: 14px;
    }

    .collection-facets__item-label {
      font-size: 14px;
    }
  }
</style>

<script type="lazyload_int">
  let inputSliderOne = document.getElementById("slider-1");
  let inputSliderTwo = document.getElementById("slider-2");

  const inputMin = document.querySelector(".collection-facets__item-input.price-range-min");
  const inputMax = document.querySelector(".collection-facets__item-input.price-range-max");
  
  let minGap = {{ highestPrice }} / 10;

  let sliderTrack = document.querySelector(".range-slider-track");
  let sliderMaxValue = document.getElementById("slider-1").max;
  
  function slideOne(){
    if(parseInt(inputSliderTwo.value) - parseInt(inputSliderOne.value) <= minGap){
      inputSliderOne.value = parseInt(inputSliderTwo.value) - minGap;
    }
    inputMin.value = Math.ceil(inputSliderOne.value / 100);
    fillColor();
  }

  function slideTwo(){

    if(parseInt(inputSliderTwo.value) - parseInt(inputSliderOne.value) <= minGap){
      inputSliderTwo.value = parseInt(inputSliderOne.value) + minGap;
    }
    inputMax.value = Math.ceil(inputSliderTwo.value / 100);
    fillColor();
  }

  function fillColor(){
    percent1 = (inputSliderOne.value / sliderMaxValue) * 100;
    percent2 = (inputSliderTwo.value / sliderMaxValue) * 100;
    sliderTrack.style.background = `linear-gradient(to right, #E3E3E3 ${percent1}% , #A3A3A3 ${percent1}% , #A3A3A3 ${percent2}%, #E3E3E3 ${percent2}%)`;
  }

  inputSliderOne.addEventListener("input", slideOne);
  inputSliderTwo.addEventListener("input", slideTwo);
</script>
